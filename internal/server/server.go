package server

import (
	"context"

	"github.com/bufbuild/connect-go"

	"github.com/one-zero-eight/Search/internal/models"
	"github.com/one-zero-eight/Search/internal/service"
	pb "github.com/one-zero-eight/Search/pkg/pb/search/v1" // generated by protoc-gen-go
)

type SearchServer struct {
	service *service.Service
}

func NewSearchServer(service *service.Service) *SearchServer {
	return &SearchServer{service: service}
}

func (s *SearchServer) AddRecord(
	ctx context.Context,
	req *connect.Request[pb.AddRecordRequest],
) (*connect.Response[pb.AddRecordResponse], error) {
	if post := req.Msg.GetTelegramChannelPost(); post != nil {
		if err := s.service.AddTgPost(ctx, &models.TgChannelPost{
			ChannelName:     post.GetChannelName(),
			ChannelUsername: post.GetChannelUsername(),
			MessageId:       post.GetMessageId(),
			MessageDate:     post.GetMessageDate(),
			MessageText:     post.GetMessageText(),
		}); err != nil {
			return nil, err
		}
	}
	return connect.NewResponse(&pb.AddRecordResponse{}), nil
}
